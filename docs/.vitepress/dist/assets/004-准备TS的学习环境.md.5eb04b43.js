import{o as e,c as s,a}from"./app.17d80fe1.js";const n='{"title":"vscode 配置","description":"","frontmatter":{},"headers":[{"level":2,"title":"vscode 配置","slug":"vscode-配置"},{"level":2,"title":"安装","slug":"安装"},{"level":2,"title":"Playground","slug":"playground"}],"relativePath":"004-准备TS的学习环境.md","lastUpdated":1622474905509}',t={},o=a('<h2 id="vscode-配置"><a class="header-anchor" href="#vscode-配置" aria-hidden="true">#</a> vscode 配置</h2><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;typescript.tsdk&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/typescript/lib&quot;</span> <span class="token comment">// 使用应用目录下安装的 TypeScript 版本，以便提供语法解析和类型检测服务</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>在<code>node</code>环境下也是不能够正常的跑<code>ts</code>的项目 一句话 就是我们最终需要转换一下</p><p>借助 babel 或者 一些工具</p><p>既然 ts 是 js 的超集，在一些环境中最终认识的还是 js,ts 好比化了妆的你的女友，更迷人而已，怎么卸妆，两种方式</p><div class="language-"><pre><code>- TypeScript 编译器\n- [https://babeljs.io/](https://babeljs.io/)\n</code></pre></div><h2 id="安装"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-sh"><pre><code>npm i -g typescript\ntsc -v\n\n</code></pre></div><div class="language-sh"><pre><code>npm i -g ts-node\n</code></pre></div><h2 id="playground"><a class="header-anchor" href="#playground" aria-hidden="true">#</a> Playground</h2>',10);t.render=function(a,n,t,d,p,r){return e(),s("div",null,[o])};export default t;export{n as __pageData};
